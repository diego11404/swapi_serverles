service: swapi-dlyza
frameworkVersion: "2"
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  jest:
    collectCoverage: true
plugins:
  - serverless-webpack
  - serverless-jest-plugin
  - serverless-dynamodb-local
  - serverless-offline
provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
    DYNAMODB_TABLE: "${self:service}-${opt:stage, self:provider.stage}"
  lambdaHashingVersion: "20201221"
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource:
        - arn:aws:dynamodb:${opt:region,self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}
package:
  individually: true
functions: ${file(./src/functions/index.yml)}
resources:
  Resources:
    TodosDynamoDbTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "${self:provider.environment.DYNAMODB_TABLE}"
